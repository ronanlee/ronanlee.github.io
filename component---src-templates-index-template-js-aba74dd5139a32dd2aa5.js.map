{"version":3,"sources":["webpack:///./src/components/FeaturedProducts/FeaturedProducts.js","webpack:///./src/components/Copyright/Copyright.js","webpack:///./src/templates/index-template.js"],"names":["FeaturedProducts","className","type","data","map","product","i","xs","sm","md","lg","xl","key","name","style","backgroundImage","bordered","bodyStyle","padding","src","logo","alt","height","width","description","href","link","Copyright","copyright","useSiteMetadata","IndexTemplate","pageContext","siteTitle","title","siteSubtitle","subtitle","keywords","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","allCategories","edges","allMarkdownRemark","pageTitle","Layout","Sidebar","Page","Feed","filter","edge","node","frontmatter","priority","sort","edge1","edge2","Pagination"],"mappings":"oPA4CeA,EAxCU,WACvB,OACE,uBAAKC,UAAU,OAAOC,KAAK,QACxBC,EAAKC,KAAI,SAACC,EAASC,GAAV,OACR,uBACEC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAKP,EAAQQ,KACbZ,UAAU,kCACVa,MAAO,CAAEC,gBAAgB,8BAA8BT,EAAI,GAAnC,UAExB,uBACEL,UAAU,uCACVe,UAAU,EACVC,UAAW,CAAEC,QAAS,KAEtB,uBAAKjB,UAAU,QACb,uBAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGV,UAAU,eAChD,yBAAKkB,IAAKd,EAAQe,KAAMC,IAAI,GAAGC,OAAO,KAAKC,MAAM,KAAKtB,UAAU,UAElE,uBAAKM,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,wBAAIV,UAAU,mBAAmBI,EAAQQ,MACzC,uBAAGZ,UAAU,QACVI,EAAQmB,YAAa,IACtB,uBAAGC,KAAMpB,EAAQqB,KAAMzB,UAAU,oBAAjC,0B,oCCvBH0B,EALG,WAChB,IAAQC,EAAcC,cAAdD,UACR,OAAO,yBAAK3B,UAAU,eAAe2B,I,sBCmFxBE,UA5EO,SAAC,GAA2B,IAAzB3B,EAAwB,EAAxBA,KAAM4B,EAAkB,EAAlBA,YAC7B,EAA+DF,cAAhDG,EAAf,EAAQC,MAA4BC,EAApC,EAA0BC,SAAwBC,EAAlD,EAAkDA,SAGhDC,EAMEN,EANFM,YACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,YACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,aACAC,EACEX,EADFW,cAGMC,EAAUxC,EAAKyC,kBAAfD,MACFE,EACJR,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDL,EAAcA,EAEnE,OACE,kBAACc,EAAA,EAAD,CAAQb,MAAOY,EAAWrB,YAAaU,EAAcE,SAAUA,GAC7D,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CACEN,MAAOA,EACJO,QAAO,SAAAC,GAAI,eAAIA,SAAJ,UAAIA,EAAMC,YAAV,iBAAI,EAAYC,mBAAhB,aAAI,EAAyBC,YACxCC,MACC,SAACC,EAAOC,GAAR,mBACEA,SAAA,UAAAA,EAAOL,YAAP,mBAAaC,mBAAb,eAA0BC,WAAWE,SAArC,UAAqCA,EAAOJ,YAA5C,iBAAqC,EAAaC,mBAAlD,aAAqC,EAA0BC,aAErEZ,cAAeA,IAEjB,kBAACO,EAAA,EAAD,CACEN,MAAOA,EAAMO,QAAO,SAAAC,GAAI,gBAAKA,SAAD,UAACA,EAAMC,YAAP,iBAAC,EAAYC,mBAAb,OAAC,EAAyBC,aACtDZ,cAAeA,IAEjB,kBAACgB,EAAA,EAAD,CACElB,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA,IAEf,kBAAC,EAAD,U","file":"component---src-templates-index-template-js-aba74dd5139a32dd2aa5.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Card } from 'antd'\nimport data from './data.json'\n\nconst FeaturedProducts = () => {\n  return (\n    <Row className=\"mb-2\" type=\"flex\">\n      {data.map((product, i) => (\n        <Col\n          xs={24}\n          sm={12}\n          md={12}\n          lg={12}\n          xl={12}\n          key={product.name}\n          className=\"bg-cover bg-center bg-no-repeat\"\n          style={{ backgroundImage: `url(/featured-products-bg/${i + 1}.jpg)` }}\n        >\n          <Card\n            className=\"featured-product h-full rounded-none\"\n            bordered={false}\n            bodyStyle={{ padding: 15 }}\n          >\n            <Row className=\"py-4\">\n              <Col xs={4} sm={6} md={6} lg={5} xl={5} className=\"text-center\">\n                <img src={product.logo} alt=\"\" height=\"40\" width=\"40\" className=\"mt-2\" />\n              </Col>\n              <Col xs={20} sm={18} md={18} lg={19} xl={19}>\n                <h3 className=\"mb-1 text-white\">{product.name}</h3>\n                <p className=\"mb-0\">\n                  {product.description}{' '}\n                  <a href={product.link} className=\"block text-white\">\n                    Read more...\n                  </a>\n                </p>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default FeaturedProducts\n","import React from 'react'\nimport { useSiteMetadata } from '../../hooks'\n\nconst Copyright = () => {\n  const { copyright } = useSiteMetadata()\n  return <div className=\"text-center\">{copyright}</div>\n}\n\nexport default Copyright\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport FeaturedProducts from '../components/FeaturedProducts'\nimport Feed from '../components/Feed'\nimport Page from '../components/Page'\nimport Copyright from '../components/Copyright'\nimport Pagination from '../components/Pagination'\nimport { useSiteMetadata } from '../hooks'\nimport '../assets/css/init.css'\n\nconst IndexTemplate = ({ data, pageContext }) => {\n  const { title: siteTitle, subtitle: siteSubtitle, keywords } = useSiteMetadata()\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath,\n    allCategories\n  } = pageContext\n\n  const { edges } = data.allMarkdownRemark\n  const pageTitle =\n    currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle} keywords={keywords}>\n      <Sidebar />\n      <Page>\n        <FeaturedProducts />\n        <Feed\n          edges={edges\n            .filter(edge => edge?.node?.frontmatter?.priority)\n            .sort(\n              (edge1, edge2) =>\n                edge2?.node?.frontmatter?.priority - edge1?.node?.frontmatter?.priority\n            )}\n          allCategories={allCategories}\n        />\n        <Feed\n          edges={edges.filter(edge => !edge?.node?.frontmatter?.priority)}\n          allCategories={allCategories}\n        />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n        <Copyright />\n      </Page>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          html\n          fields {\n            slug\n            categorySlug\n            tagSlugs\n          }\n          frontmatter {\n            title\n            date\n            tags\n            category\n            description\n            priority\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexTemplate\n"],"sourceRoot":""}