(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{186:function(s,t,a){"use strict";a.r(t);var n={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},e=a(5),o=Object(e.a)(n,function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.slotKey}},[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# By installing the Amazon Discovery Agent, you agree that your use is")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# subject to the terms of your existing AWS Customer Agreement or other ")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# agreement with Amazon Web Services, Inc. or its affiliates governing your ")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# use of AWS services. You may not install and use the ")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# Amazon Discovery Agent unless you have an account in good standing with AWS.")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("# Copyright 2017 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# Licensed under the terms of your existing AWS Customer Agreement ")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# <https://aws.amazon.com/agreement/> or other agreement with Amazon Web Services, Inc. ")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# or its affiliates governing your use of AWS services.")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# Discovery Agent installer script to get the proper package installed.")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# Version: 2.0.1129.0")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("# For debugging, uncomment this line:")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("# set -eux")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" exit_run_once "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local pidfile"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v("\n    local exitcode"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${2}")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("$pidfile")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$exitcode")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" init_run_once "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local pidfile"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v("\n    local pid_creation_code"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("$pidfile")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        local pid"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" $pidfile"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("ps")]),s._v(" -p "),a("span",{attrs:{class:"token variable"}},[s._v("$pid")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/null 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("1\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -eq 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Script '),a("span",{attrs:{class:"token variable"}},[s._v("$0")]),s._v(' is already running. Will retry at next cron interval."')]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("# assume stale pidfile")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" $$ "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$pidfile")]),s._v("\n            pid_creation_code"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("# There a theoretical race condition right here, but our cron does not spawn twice within a fractional second or even a minute, ever.")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" $$ "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$pidfile")]),s._v("\n        pid_creation_code"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$pid_creation_code")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Could not create PID file: '),a("span",{attrs:{class:"token variable"}},[s._v("$pidfile")]),s._v('."')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" validate_boolean "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Bash doesn't have booleans, so let's validate.")]),s._v("\n    local str"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${str}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"true"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${str}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"false"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Invalid boolean value of '),a("span",{attrs:{class:"token variable"}},[s._v("${str}")]),s._v('"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v("  1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" determine_os_package_manager"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" dpkg 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      PACKAGE_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"deb"')]),s._v("\n      OS_PACKAGE_MGR"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"apt-get"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" yum 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      PACKAGE_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"rpm"')]),s._v("\n      OS_PACKAGE_MGR"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"yum"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" rpm 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" zypper 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      PACKAGE_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"rpm"')]),s._v("\n      OS_PACKAGE_MGR"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"zypper"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"No supported package managers are installed."')]),s._v("\n      exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Check if 64 bit installation is requested by customer")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_AGENT_ARCHITECTURE}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"64"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        PACKAGE_ARCHITECTURE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"-x86_64"')]),s._v("\n        PACKAGE_FILENAME"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"aws-discovery-agent'),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_ARCHITECTURE}")]),s._v("."),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_TYPE}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        PACKAGE_FILENAME"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"aws-discovery-agent.'),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_TYPE}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Using '),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_TYPE}")]),s._v(" and "),a("span",{attrs:{class:"token variable"}},[s._v("${OS_PACKAGE_MGR}")]),s._v(" for package management. Expected agent package name is "),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v('."')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" create_secure_tmp_dir"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    SECURE_TMP_DIR"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("mktemp -d /tmp/awsdiscoveryagent.XXXXXXXX"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Cleanup hooks")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("trap")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"rm -f '),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/*; rmdir "),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v('"')]),s._v(" SIGTERM SIGINT EXIT\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Check that the dir exists and is owned by our euid (root)")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -O "),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Unable to create secure temporary directory '),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v('."')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("chmod")]),s._v(" 700 "),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" get_key_fingerprint"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local key_file"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v("\n    local key_fingerprint"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\n    gpg -q --no-default-keyring --keyring "),a("span",{attrs:{class:"token variable"}},[s._v("${key_file}")]),s._v(" --with-colons --fingerprint "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),s._v(" IFS"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(": "),a("span",{attrs:{class:"token function"}},[s._v("read")]),s._v(" -ra arr"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        local tag"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${arr[0]}")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"fpr"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${tag}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token comment"}},[s._v("# Found the tagged line with the fingerprint. Output to stdout.")]),s._v("\n            key_fingerprint"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${arr[9]}")]),s._v('"')]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" pin_or_verify_key"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local key_file"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v("\n    local pinned_keys_path"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${2}")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Get the fingerprint of the input GPG key")]),s._v("\n    local key_fingerprint"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("get_key_fingerprint $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("key_file"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"No key fingerprint was found for '),a("span",{attrs:{class:"token variable"}},[s._v("${key_file}")]),s._v('"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Create the pinned keys directory as needed")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d "),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Creating directory for GPG key pinning: '),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# See if we have any pinned keys")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("ls")]),s._v(" -A $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pinned_keys_path"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# We have pinned keys, see if one matches the downloaded key")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" pinned "),a("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v('*"')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n          local pinned_fingerprint"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("get_key_fingerprint $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pinned"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_fingerprint}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Found matching pinned key for '),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v('"')]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 0\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"None of the pinned keys in '),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v(" match the fingerprint "),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v('"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# No pinned keys; pin the downloaded key")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"No pinned keys found in '),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v("; pinning key with fingerprint "),a("span",{attrs:{class:"token variable"}},[s._v("${key_fingerprint}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${key_file}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${pinned_keys_path}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" download_and_verify_sig"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local download_url"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n    local download_file_name"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Secure temporary directory '),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v(' is undefined or does not exist."')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_PATH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -s "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_PATH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Public key file '),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_FILE}")]),s._v(' is undefined or does not exist."')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# get the file")]),s._v("\n    "),a("span",{attrs:{class:"token variable"}},[s._v("${CURL}")]),s._v(" -o "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${download_url}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to download the '),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v(" from "),a("span",{attrs:{class:"token variable"}},[s._v("${download_url}")]),s._v('"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# get the corresponding signature file")]),s._v("\n    "),a("span",{attrs:{class:"token variable"}},[s._v("${CURL}")]),s._v(" -o "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v('.sig"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${download_url}")]),s._v('.sig"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to download the '),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v(" signature from "),a("span",{attrs:{class:"token variable"}},[s._v("${download_url}")]),s._v('.sig"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    gpg_results"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v(" gpg -q --no-default-keyring --keyring "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_PATH}")]),s._v('"')]),s._v(" --verify "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v('.sig"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v('"')]),s._v(" 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("1 "),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -eq 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Validated '),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v(" signature with: "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${gpg_results}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" -i fingerprint"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Error validating signature of '),a("span",{attrs:{class:"token variable"}},[s._v("${download_file_name}")]),s._v(', terminating.  Please contact AWS Support."')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${gpg_results}")]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" get_existing_version"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local agent_version_file"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/opt/aws/discovery/version\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("${agent_version_file}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        EXISTING_VERSION"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v("$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("agent_version_file"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        EXISTING_VERSION"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("0\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" is_version_greater_than"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local v1"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    local v2"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${#v1[*]}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" 4 "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${#v1[*]}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" 4 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n       "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("\"Warning - version numbers aren't expected lengths "),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),s._v(", "),a("span",{attrs:{class:"token variable"}},[s._v("${2}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{attrs:{class:"token operator"}},[s._v("<")]),a("span",{attrs:{class:"token number"}},[s._v("4")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{attrs:{class:"token operator"}},[s._v("++")]),a("span",{attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n       "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${v1[i]:-0}")]),s._v('"')]),s._v(" -gt "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${v2[i]:-0}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n       "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n       "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${v1[i]:-0}")]),s._v('"')]),s._v(" -lt "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${v2[i]:-0}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n       "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),a("span",{attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" get_base_url"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    BUCKET"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"aws-discovery-agent.'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('"')]),s._v("\n    BASE_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"https://s3-'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v(".amazonaws.com/"),a("span",{attrs:{class:"token variable"}},[s._v("${BUCKET}")]),s._v('"')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" get_actual_package_hash"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ACTUAL_PACKAGE_HASH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v(" sha256sum $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("LOCAL_PACKAGE_FILE"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f1 -d"),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" download_and_verify_package"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{attrs:{class:"token variable"}},[s._v("${BASE_URL}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        get_base_url\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Create a Secure temp directory SECURE_TMP_DIR where we get all files and then use them.")]),s._v("\n    create_secure_tmp_dir\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# get the public key")]),s._v("\n    PUBKEY_PATH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_FILE}")]),s._v("\n    "),a("span",{attrs:{class:"token variable"}},[s._v("${CURL}")]),s._v(" -o "),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_PATH}")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${BASE_URL}")]),s._v("/linux/latest/"),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_FILE}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to download public key from the path '),a("span",{attrs:{class:"token variable"}},[s._v("${BASE_URL}")]),s._v("/linux/latest/"),a("span",{attrs:{class:"token variable"}},[s._v("${PUBKEY_FILE}")]),s._v('"')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PIDFILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# get the discovery agent current release file (which provides latest release version and URL of the release manifest)")]),s._v("\n    CURRENT_RELEASE_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${BASE_URL}")]),s._v("/linux/latest/"),a("span",{attrs:{class:"token variable"}},[s._v("${CURRENT_RELEASE_FILE}")]),s._v('"')]),s._v("\n    download_and_verify_sig "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${CURRENT_RELEASE_URL}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${CURRENT_RELEASE_FILE}")]),s._v('"')]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# get the release manifest file")]),s._v("\n    RELEASE_MANIFEST_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("head")]),s._v(" -1 $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("SECURE_TMP_DIR"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("CURRENT_RELEASE_FILE"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f2 -d "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    download_and_verify_sig "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${RELEASE_MANIFEST_URL}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${RELEASE_MANIFEST_FILE}")]),s._v('"')]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"The expected package file name from agent manifest is '),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v('."')]),s._v("\n    PACKAGE_FILE_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PACKAGE_FILENAME"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("SECURE_TMP_DIR"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("RELEASE_MANIFEST_FILE"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PACKAGE_FILENAME"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".sig "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f3 -d "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n\n    download_and_verify_sig "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILE_URL}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -s "),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to download package from the path '),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILE_URL}")]),s._v('."')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Please contact AWS support to report this issue."')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Check the hash of the package downloaded vs. the hash of the package in the manifest")]),s._v("\n    LOCAL_PACKAGE_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${SECURE_TMP_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v('"')]),s._v("\n    get_actual_package_hash\n    EXPECTED_PACKAGE_HASH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PACKAGE_FILENAME"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("SECURE_TMP_DIR"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("RELEASE_MANIFEST_FILE"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v $"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PACKAGE_FILENAME"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".sig "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -f2 -d "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${ACTUAL_PACKAGE_HASH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${EXPECTED_PACKAGE_HASH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Package sha256 hash does not match expected package hash from package index."')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Please contact AWS support to report this issue."')]),s._v("\n        exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PIDFILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Validated package sha256 hash matches expected value."')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" setup_curl_prefix"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local curl_args"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"-s --fail --retry 5 --max-time 30"')]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Optionally add CA bundle path.")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CA_BUNDLE}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        curl_args"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${curl_args}")]),s._v(" --cacert "),a("span",{attrs:{class:"token variable"}},[s._v("${DISCOVERY_CA_BUNDLE_FILE}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Using CA certificate bundle at '),a("span",{attrs:{class:"token variable"}},[s._v("${DISCOVERY_CA_BUNDLE_FILE}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CURL}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# Linux distributions have a variety of locations for public root certificates. Since we compile cURL on RHEL,")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# it defaults to that location, therefore we need to dynamically set the desired CA path based on what path")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# exists.")]),s._v("\n        local -a possible_ca_paths"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{attrs:{class:"token string"}},[s._v('"/etc/ssl/certs/ca-certificates.crt"')]),s._v("\n            "),a("span",{attrs:{class:"token string"}},[s._v('"/etc/pki/tls/certs/ca-bundle.crt"')]),s._v("\n            "),a("span",{attrs:{class:"token string"}},[s._v('"/etc/ssl/ca-bundle.pem"')]),s._v("\n            "),a("span",{attrs:{class:"token string"}},[s._v('"/etc/pki/tls/cacert.pem"')]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" path "),a("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${possible_ca_paths[@]}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("${path}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                curl_args"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${curl_args}")]),s._v(" --cacert "),a("span",{attrs:{class:"token variable"}},[s._v("${path}")]),s._v('"')]),s._v("\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Using CA certificate bundle at '),a("span",{attrs:{class:"token variable"}},[s._v("${path}")]),s._v('"')]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CURL}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# Replace the global curl prefix with one using the curl installed along with the agent")]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("export")]),s._v(" LD_LIBRARY_PATH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${DISCOVERY_BIN_DIR}")]),s._v("\n        CURL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${DISCOVERY_BIN_DIR}")]),s._v("curl "),a("span",{attrs:{class:"token variable"}},[s._v("${curl_args}")]),s._v(' "')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# Just use the cURL that is part of the Linux distribution.")]),s._v("\n        CURL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"curl '),a("span",{attrs:{class:"token variable"}},[s._v("${curl_args}")]),s._v(' "')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" in_array"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Find a Needle inside Haystack")]),s._v("\n    local haystack"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${1}")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    local needle"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${2}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${!haystack}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${i}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${needle}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 0\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 1\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" lowercase"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/"')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" get_os_info "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    OS"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("lowercase \\"),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),s._v("uname\\`"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n    MACH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${OS}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"linux"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      # Figure out "),a("span",{attrs:{class:"token function"}},[s._v("which")]),s._v(" OS we are running on\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/os-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          "),a("span",{attrs:{class:"token function"}},[s._v("source")]),s._v(" /etc/os-release\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$ID\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$NAME\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$VERSION_ID\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /usr/lib/os-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          "),a("span",{attrs:{class:"token function"}},[s._v("source")]),s._v(" /usr/lib/os-release\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$ID\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$NAME\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("$VERSION_ID\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/centos-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'CentOS'")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/centos-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ release.*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/centos-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/.*release\\ // "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ .*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/redhat-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'RedHat'")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/redhat-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ release.*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/redhat-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/.*release\\ // "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ .*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/system-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Amazon Linux AMI"')]),s._v(" /etc/system-release"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'amzn'")]),s._v("\n          "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/system-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ release.*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/system-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/.*release\\ // "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ .*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/SuSE-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'SuSe'")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("head")]),s._v(" -n1 /etc/SuSE-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d"),a("span",{attrs:{class:"token string"}},[s._v('" "')]),s._v(" -f1"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/SuSE-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/.*"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("\\ //"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/mandrake-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'Mandrake'")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/mandrake-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/.*release\\ // "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/\\ .*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/debian_version "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v("'Debian'")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/lsb-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'^DISTRIB_ID'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),a("span",{attrs:{class:"token string"}},[s._v("'{ print "),a("span",{attrs:{class:"token variable"}},[s._v("$2")]),s._v(" }'")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n          REV"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/lsb-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'^DISTRIB_RELEASE'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),a("span",{attrs:{class:"token string"}},[s._v("'{ print "),a("span",{attrs:{class:"token variable"}},[s._v("$2")]),s._v(" }'")]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/UnitedLinux-release "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          DIST"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v('"$'),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("DIST"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/UnitedLinux-release "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(" ' ' "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("sed")]),s._v(" s/VERSION.*//"),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("`")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token string"}},[s._v('"\n      fi\n    fi\n\n    if [ "')]),s._v("$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("OS"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token string"}},[s._v('" == "')]),s._v('darwin" '),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        OS"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("mac\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    DIST_TYPE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("`")])]),s._v("lowercase "),a("span",{attrs:{class:"token variable"}},[s._v("$DIST_TYPE")]),s._v("`\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${DIST}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${DIST_TYPE}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Unsupported distribution: '),a("span",{attrs:{class:"token variable"}},[s._v("${DIST}")]),s._v(" and distribution type: "),a("span",{attrs:{class:"token variable"}},[s._v("${DIST_TYPE}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" ensure_32bit_c_runtime"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local install_method"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${MACH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"x86_64"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("# If we're on 64bit linux, use specified method to install 32bit C runtime")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${install_method}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"apt-get"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" dpkg -s libc6:i386"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                dpkg --add-architecture i386\n                "),a("span",{attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n                "),a("span",{attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" -y libc6:i386\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to install libc:i386"')]),s._v("\n                    exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${install_method}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"yum"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" yum list installed glibc.i686"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                yum -y "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" glibc.i686\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to install glibc.i686"')]),s._v("\n                    exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${install_method}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"zypper"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" zypper se -i glibc-32bit"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                zypper refresh\n                zypper --non-interactive "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" glibc-32bit\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to install glibc-32bit"')]),s._v("\n                    exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" zypper se -i glibc-locale-32bit"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                zypper refresh\n                zypper --non-interactive "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" glibc-locale-32bit\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("$?")]),s._v(" -ne 0 "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Failed to install glibc-locale-32bit"')]),s._v("\n                    exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" daemon_action"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    local action"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"stop"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"start"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"restart"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Unsupported daemon action: '),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v('"')]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Use heuristics to determine correct method to carry out the requested action on aws-discovery-daemon.")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("/sbin/init --version 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" -e "),a("span",{attrs:{class:"token string"}},[s._v("'upstart'")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        initctl "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v(" aws-discovery-daemon\n        "),a("span",{attrs:{class:"token function"}},[s._v("wait")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("# Wait until daemon has completed action.")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v(" -z "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v("systemctl 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("grep")]),s._v(" -F -e -.mount"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("${systemd_file}")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            systemctl "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v(" aws-discovery-daemon\n            "),a("span",{attrs:{class:"token function"}},[s._v("wait")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("# Wait until daemon has completed action.")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'ERR: expected aws-discovery-daemon service description file but did not find it'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/init.d/aws-discovery-daemon "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        /etc/init.d/aws-discovery-daemon "),a("span",{attrs:{class:"token variable"}},[s._v("${action}")]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("wait")]),s._v("  "),a("span",{attrs:{class:"token comment"}},[s._v("# Wait until daemon has completed action.")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'ERR: cannot determine method to stop aws-discovery-daemon'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" print_header"),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" -e "),a("span",{attrs:{class:"token string"}},[s._v('"\\n"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"**************************************************"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"    '),a("span",{attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"**************************************************"')]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("whoami")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"root"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Script is run as '),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("whoami")]),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('. Please run as root"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" 1\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\nPID_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"/var/run/"')]),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("basename")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("$(")]),s._v("readlink -f $0"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".PID\ninit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" -a SUPPORTED_REGIONS"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"us-west-2"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nREGION"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"us-west-2"')]),s._v("\nCURRENT_RELEASE_VERSION"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"2.0.1129.0"')]),s._v("\nCURRENT_RELEASE_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"CURRENT_RELEASE"')]),s._v("\nRELEASE_MANIFEST_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"AWS_AGENT_INVENTORY"')]),s._v("\nPUBKEY_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("discovery.gpg\nUPDATE_AGENT"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("true "),a("span",{attrs:{class:"token comment"}},[s._v("# Agent update choice to customer")]),s._v("\nBASE_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\nINSTALL_PREREQUISITES"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("true\nUSE_DISCOVERY_CURL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("false\nUSE_DISCOVERY_CA_BUNDLE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("false\nOP"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("install "),a("span",{attrs:{class:"token comment"}},[s._v("# Default operation mode.")]),s._v("\nPREVIOUS_PACKAGE_HASH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\nAWS_KEY_ID"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\nAWS_KEY_SECRET"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\nLOCAL_PACKAGE_FILE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('""')]),s._v("\nLOCAL_PACKAGE_DIR"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("cd")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"$( dirname "')]),s._v("$"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("BASH_SOURCE"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v('" '),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("pwd")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token string"}},[s._v('"\n\n# Destination location constants.\nINSTALL_CONFIG_FILE=/var/opt/aws/discovery/install.cfg\nAGENT_CONFIG_FILE=/var/opt/aws/discovery/config\n\n# Potential previous inspector agents that might be installed\nPREVIEW_INSPECTOR_AGENT=/opt/aws/inspector/bin/inspector\nV1_DISCOVERY_AGENT=/opt/aws/awsagent/bin/awsagent\n\n# Load prior settings if the config file exists\nif [[ -s "')]),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),a("span",{attrs:{class:"token string"}},[s._v('" ]]; then\n    echo "')]),s._v("Loading saved installer configuration from "),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),a("span",{attrs:{class:"token keyword"}},[s._v(".")]),a("span",{attrs:{class:"token string"}},[s._v('"\n    source '),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),s._v('\nfi\n\n# Parse command line options for any customer specified overrides\nfunction print_usage() {\n    echo "')]),s._v("Usage:"),a("span",{attrs:{class:"token string"}},[s._v('"\n    echo "')]),s._v("    "),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" -k "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AWS key ID"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -s "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AWS key secret"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token string"}},[s._v('"\n    echo\n    echo "')]),s._v("To turn off auto-update:"),a("span",{attrs:{class:"token string"}},[s._v('"\n    echo "')]),s._v("    "),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("install")]),s._v(" -k "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AWS key ID"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -s "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AWS key secret"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -u "),a("span",{attrs:{class:"token boolean"}},[s._v("false")]),a("span",{attrs:{class:"token string"}},[s._v('"\n    echo\n    echo "')]),s._v("To run locally on Linux distributions that don"),a("span",{attrs:{class:"token string"}},[s._v('\'t have working package repositories and/or up-to-date curl binaries:"\n    echo "    sudo bash install -k [AWS key ID] -s [AWS key secret] -p false -c true -b true"\n}\n\nwhile getopts "r:u:k:s:l:p:c:b:a:h" opt; do\n    case '),a("span",{attrs:{class:"token variable"}},[s._v("${opt}")]),s._v(' in\n        c)\n            echo "Use cURL installed with the agent option specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            validate_boolean '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v("\n            USE_DISCOVERY_CURL="),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        b)\n            echo "Use the certificate authority (CA) bundle installed with the agent specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            validate_boolean '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v("\n            USE_DISCOVERY_CA_BUNDLE="),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        r)\n            echo "Custom AWS region option specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            REGION='),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        u)\n            echo "Auto update option specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            validate_boolean '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v("\n            UPDATE_AGENT="),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        p)\n            echo "Install prerequisites option specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            INSTALL_PREREQUISITES='),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        k)\n            echo "AWS key ID option specified as: '),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            AWS_KEY_ID='),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('\n            ;;\n        s)\n            echo "AWS key secret option specified."\n            AWS_KEY_SECRET='),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v("\n            ;;\n        a)\n            echo \"Installing '")]),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),a("span",{attrs:{class:"token string"}},[s._v('\' bit."\n            INSTALL_AGENT_ARCHITECTURE="'),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('"\n            ;;\n        h)\n            print_usage\n            exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 0\n            ;;\n        \\?)\n            echo "Invalid option: -'),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v('."\n            print_usage\n            exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\n            ;;\n        :)\n            echo "Option -'),a("span",{attrs:{class:"token variable"}},[s._v("${OPTARG}")]),s._v(' requires an argument."\n            print_usage\n            exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\n            ;;\n    esac\ndone\n\nprint_header "INIT PHASE"\n\n# Resolve DIST_TYPE, DIST, REV\nget_os_info\n\necho "Distribution type of the machine is '),a("span",{attrs:{class:"token variable"}},[s._v("${DIST_TYPE}")]),s._v('."\necho "Distribution of the machine is '),a("span",{attrs:{class:"token variable"}},[s._v("${DIST}")]),s._v('." \necho "Revision of the distribution is '),a("span",{attrs:{class:"token variable"}},[s._v("${REV}")]),s._v('."\n\n# check if the preview inspector agent runs\nif [[ -f "'),a("span",{attrs:{class:"token variable"}},[s._v("${PREVIEW_INSPECTOR_AGENT}")]),s._v('" ]]; then\n    echo "Preview version of AWS Inspector Agent is still installed on this machine. Please refer to AWS documentation at https://aws.amazon.com/inspector to remove this agent before proceeding. "\n    exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\nfi\n\n# check if the v1 inspector agent runs\nif [[ -f "'),a("span",{attrs:{class:"token variable"}},[s._v("${V1_DISCOVERY_AGENT}")]),s._v('" ]]; then\n    echo "AWS Inspector Agent is still installed on this machine. Please refer to AWS documentation at https://aws.amazon.com/inspector to remove this agent before proceeding. "\n    exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\nfi\n\n# Verify that we have a valid region\nif [[ -n "'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('" ]]; then\n    if in_array SUPPORTED_REGIONS "'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('"; then\n        :\n    else\n        echo "Invalid region of '),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v("; AWS Discovery Agent is only supported in "),a("span",{attrs:{class:"token variable"}},[s._v("${SUPPORTED_REGIONS[@]}")]),s._v('."\n        exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\n    fi\nelse\n    echo "No region information available."\n    echo "Usage: sudo bash install.sh -r #Region -u #Update"\n    echo "AWS Discovery agent is only supported in '),a("span",{attrs:{class:"token variable"}},[s._v("${SUPPORTED_REGIONS[@]}")]),s._v('"\n    exit_run_once '),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(' 1\nfi\necho "'),a("span",{attrs:{class:"token variable"}},[a("span",{attrs:{class:"token variable"}},[s._v("$(")]),a("span",{attrs:{class:"token function"}},[s._v("hostname")]),s._v(" -f"),a("span",{attrs:{class:"token variable"}},[s._v(")")])]),s._v(" is using IAM authentication with AWS region "),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('."\n\n# Get the existing agent version\nget_existing_version\nif [[ '),a("span",{attrs:{class:"token variable"}},[s._v("${EXISTING_VERSION}")]),s._v(' == 0 ]]; then\n  echo "There is no existing version of the AWS Discovery Agent on the machine."\nelse\n  echo "Existing version of the AWS Discovery Agent installed is '),a("span",{attrs:{class:"token variable"}},[s._v("${EXISTING_VERSION}")]),s._v('."\nfi\n\n# Verify that we have the required .deb/.rpm for the agent and that it is valid.\ndetermine_os_package_manager\nLOCAL_PACKAGE_FILE="'),a("span",{attrs:{class:"token variable"}},[s._v("${LOCAL_PACKAGE_DIR}")]),s._v("/"),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v('"\necho "Installing using local file '),a("span",{attrs:{class:"token variable"}},[s._v("${LOCAL_PACKAGE_FILE}")]),s._v('"\nif [[ ! -s '),a("span",{attrs:{class:"token variable"}},[s._v("${LOCAL_PACKAGE_FILE}")]),s._v(' ]]; then\n    print_header "DOWNLOAD PHASE"\n    setup_curl_prefix\n    download_and_verify_package\n    # the following to be uncommented (with above four lines deleted) once we\'')]),s._v("ve upgraded all pre-tar agents\n    "),a("span",{attrs:{class:"token comment"}},[s._v('#echo "Specified local installer file ${LOCAL_PACKAGE_FILE} does not exist."')]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("#exit_run_once ${PID_FILE} 1")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\nget_actual_package_hash\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${PREVIOUS_PACKAGE_HASH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${ACTUAL_PACKAGE_HASH}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    print_header "),a("span",{attrs:{class:"token string"}},[s._v('"INSTALL PREREQUISITES PHASE"')]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_PREREQUISITES}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Verifying that the 32-bit C runtime is present."')]),s._v("\n        ensure_32bit_c_runtime "),a("span",{attrs:{class:"token variable"}},[s._v("${OS_PACKAGE_MGR}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Not installing prerequisites since this option was disabled."')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    print_header "),a("span",{attrs:{class:"token string"}},[s._v('"INSTALL AGENT PHASE"')]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("~ \\.deb$ "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" dpkg 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Installing agent with dpkg..."')]),s._v("\n      dpkg -E -i "),a("span",{attrs:{class:"token variable"}},[s._v("${LOCAL_PACKAGE_FILE}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${PACKAGE_FILENAME}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("~ \\.rpm$ "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("hash")]),s._v(" rpm 2"),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Installing agent with rpm..."')]),s._v("\n      rpm -ifU "),a("span",{attrs:{class:"token variable"}},[s._v("${LOCAL_PACKAGE_FILE}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n      "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"No supported package managers are installed."')]),s._v("\n      exit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 1\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Update config (and restart daemon), if specified")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -n "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" -n "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${AWS_KEY_ID}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" -n "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${AWS_KEY_SECRET}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Updating config and restarting agent"')]),s._v("\n\n        "),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${AGENT_CONFIG_FILE}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<<")]),s._v("- EOM\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token string"}},[s._v('"awsKeyId"')]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${AWS_KEY_ID}")]),s._v('"')]),s._v(",\n    "),a("span",{attrs:{class:"token string"}},[s._v('"awsKeySecret"')]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${AWS_KEY_SECRET}")]),s._v('"')]),s._v(",\n    "),a("span",{attrs:{class:"token string"}},[s._v('"awsRegion"')]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v('"')]),s._v(",\n    "),a("span",{attrs:{class:"token string"}},[s._v('"useAWSCABundle"')]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CA_BUNDLE}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nEOM\n\n        daemon_action restart\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"*** WARNING: You must provide AWS region, AWS key id, and AWS key secret to configure the AWS Discovery Agent."')]),s._v("\n        print_usage\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n    print_header "),a("span",{attrs:{class:"token string"}},[s._v('"FINISH PHASE"')]),s._v("\n\n    get_existing_version\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Notice:"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"By installing the Amazon Discovery Agent, you agree that your use is subject to the terms of your existing "')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"AWS Customer Agreement or other agreement with Amazon Web Services, Inc. or its affiliates governing your "')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"use of AWS services. You may not install and use the Amazon Discovery Agent unless you have an account in "')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"good standing with AWS."')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"*  *  *"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Current running agent reports version as: '),a("span",{attrs:{class:"token variable"}},[s._v("${EXISTING_VERSION}")]),s._v('"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"This install script was created to install agent version: 2.0.1129.0"')]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"In most cases, these version numbers should be the same."')]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("# Save the config so we can update with the same parameters")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -s "),a("span",{attrs:{class:"token string"}},[s._v('"'),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),s._v('"')]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token variable"}},[s._v("${INSTALL_CONFIG_FILE}")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<<")]),s._v("- EOM\nREGION"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${REGION}")]),s._v("\nPREVIOUS_PACKAGE_HASH"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${ACTUAL_PACKAGE_HASH}")]),s._v("\nUPDATE_AGENT"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${UPDATE_AGENT}")]),s._v("\nBASE_URL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${BASE_URL}")]),s._v("\nUSE_DISCOVERY_CURL"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CURL}")]),s._v("\nUSE_DISCOVERY_CA_BUNDLE"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token variable"}},[s._v("${USE_DISCOVERY_CA_BUNDLE}")]),s._v("\nEOM\n\n"),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    print_header "),a("span",{attrs:{class:"token string"}},[s._v('"FINISH PHASE"')]),s._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Previously installed discovery agent and the newly pulled package have the same hash, so there is no need to update the package."')]),s._v("\n    get_existing_version\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"Current running agent reports version as: '),a("span",{attrs:{class:"token variable"}},[s._v("${EXISTING_VERSION}")]),s._v('"')]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\nexit_run_once "),a("span",{attrs:{class:"token variable"}},[s._v("${PID_FILE}")]),s._v(" 0\n\n")])])])])},[],!1,null,null,null);o.options.__file="aws-install-bash.md";t.default=o.exports}}]);